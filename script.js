/*
	Для возможности использования объекта с циклом for...of нужно создать в нем свойство с названием Symbol.iterator.
	При вызове метода Symbol.iterator итерируемый объект должен возвращать другой объект который умеет осуществлять перебор. Данный объект называет итератор.
	ВАЖНО: у такого объекта обязательно должен быть метод "next" который при каждом вызове возвращает очередное значение и проверяет окончен ли перебор.
*/


// создаем объект
let generateNumbers = {
	start: 1,
	end: 15
}


// делаем объект generateNumbers итерируемым
generateNumbers[Symbol.iterator] = function(){
	// создаем переменные current и last для того чтобы использовать их внутри данной функции
	// -- ими мы будем определять интервалы которые нам нужно будет использовать
	let current = this.start;
	let last = this.end;
	return {
		next() {
			if (current <= last) 
			{
				// открывающуюся фигурную скобку после return нужно писать вместе на одной строчке, иначе будет ошибка
				return {
					// свойство done помогает определить закончена ли итерация
					done: false,
					value: current++
				}
			}
			else
			{
				return {
					done: true
				}	
			}
		}
	}
}


/*
	К вновь созданному объекту generateNumbers (это уже обновленный объект со свойством Symbol.iterator) применим цикл for...of в котором выведем результат в консоль.
	Цикл for...of в начале своего выполнения автоматически вызывает Symbol.iterator.
	После этого он получает итератор и далее вызываем метод next до получения объекта со свойством done равным true.
*/
for (let number of generateNumbers)
{
	console.log(number);
}